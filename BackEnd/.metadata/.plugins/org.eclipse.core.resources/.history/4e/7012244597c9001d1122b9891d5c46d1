package com.gusdalf.tool.services;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.gusdalf.tool.domain.Project;
import com.gusdalf.tool.exceptions.ProjectIdException;
import com.gusdalf.tool.repositories.ProjectRepository;

@Service
public class ProjectService {

	@Autowired
	private ProjectRepository projectRepository;
	
	public Project saveOrUpdateProject(Project project) {
		
		//Logic and Tests
		try {
			project.setProjectIdentifier(project.getProjectIdentifier().toUpperCase());
			return projectRepository.save(project);
		}catch(Exception e) {
			throw new ProjectIdException("Project ID " + project.getProjectIdentifier().toUpperCase() +"already exists");
		}
	}
	
	public Project findByProjectIdentifier(String projectId) {
		
		Project project = projectRepository.findByProjectIdentifier(projectId.toUpperCase());
		if (project == null) {
			throw new ProjectIdException("Project ID "+projectId +" does not exists");
			
		}
		return project;
	}
	
	public Iterable<Project> findAllProjects(){
		return projectRepository.findAll();
	}
	
	public void deletePorjectByIdentifier(String projectId) {
		Project project = projectRepository.findByProjectIdentifier(projectId);
	}
}
